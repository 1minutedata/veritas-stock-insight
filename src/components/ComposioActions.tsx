import { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { useToast } from "@/components/ui/use-toast";
import { supabase } from "@/integrations/supabase/client";
import { Mail, Send, Brain, Loader2 } from "lucide-react";

interface ComposioActionsProps {
  userEmail: string;
  stockSymbol?: string;
  analysis?: string;
}

export const ComposioActions = ({ userEmail, stockSymbol, analysis }: ComposioActionsProps) => {
  const { toast } = useToast();
  const [isLoading, setIsLoading] = useState(false);
  const [emailContent, setEmailContent] = useState("");
  const [recipientEmail, setRecipientEmail] = useState("");

  const generateEmailContent = () => {
    if (stockSymbol && analysis) {
      const content = `Subject: VeritasPilot Stock Analysis - ${stockSymbol}

Dear Investor,

Here's your AI-powered analysis for ${stockSymbol}:

${analysis}

This analysis was generated by VeritasPilot, your AI co-pilot for stock market insights.

Best regards,
VeritasPilot AI
`;
      setEmailContent(content);
    } else {
      setEmailContent("Subject: Stock Market Update from VeritasPilot\n\nYour personalized stock analysis report...");
    }
  };

  const sendEmailViaComposio = async () => {
    if (!emailContent.trim() || !recipientEmail.trim()) {
      toast({
        title: "Error",
        description: "Please provide both recipient email and email content",
        variant: "destructive",
      });
      return;
    }

    setIsLoading(true);

    try {
      // Extract subject and body from email content
      const lines = emailContent.split('\n');
      const subjectLine = lines.find(line => line.startsWith('Subject:'));
      const subject = subjectLine ? subjectLine.replace('Subject:', '').trim() : 'Stock Analysis from VeritasPilot';
      const body = emailContent.replace(subjectLine || '', '').trim();

      const { data, error } = await supabase.functions.invoke('composio-auth', {
        body: {
          action: 'executeAction',
          userId: userEmail,
          actionData: {
            action: 'GMAIL_SEND_EMAIL',
            parameters: {
              to_email: recipientEmail,
              subject: subject,
              body: body,
            }
          }
        }
      });

      if (error) throw error;

      toast({
        title: "Email Sent Successfully",
        description: `Stock analysis sent to ${recipientEmail}`,
      });

      setEmailContent("");
      setRecipientEmail("");

    } catch (error: any) {
      console.error('Error sending email:', error);
      toast({
        title: "Error",
        description: "Failed to send email. Please ensure Gmail is connected.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <Card className="p-6 shadow-card">
      <div className="space-y-4">
        <div className="flex items-center gap-2">
          <Brain className="h-5 w-5 text-primary" />
          <h3 className="text-lg font-semibold">AI Email Actions</h3>
          <Badge variant="secondary" className="gap-1">
            <Mail className="h-3 w-3" />
            Powered by Composio
          </Badge>
        </div>

        <div className="space-y-3">
          <div>
            <label className="text-sm font-medium">Recipient Email</label>
            <input
              type="email"
              placeholder="recipient@example.com"
              value={recipientEmail}
              onChange={(e) => setRecipientEmail(e.target.value)}
              className="w-full px-3 py-2 border border-input rounded-md bg-background text-foreground"
            />
          </div>

          <div>
            <div className="flex items-center justify-between mb-2">
              <label className="text-sm font-medium">Email Content</label>
              <Button
                variant="outline"
                size="sm"
                onClick={generateEmailContent}
                disabled={!stockSymbol}
              >
                <Brain className="h-3 w-3 mr-1" />
                Generate
              </Button>
            </div>
            <Textarea
              placeholder="Email content will be generated based on current analysis..."
              value={emailContent}
              onChange={(e) => setEmailContent(e.target.value)}
              rows={8}
              className="resize-none"
            />
          </div>

          <Button 
            onClick={sendEmailViaComposio}
            disabled={isLoading || !emailContent.trim() || !recipientEmail.trim()}
            className="w-full"
          >
            {isLoading ? (
              <>
                <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                Sending...
              </>
            ) : (
              <>
                <Send className="h-4 w-4 mr-2" />
                Send Analysis Email
              </>
            )}
          </Button>
        </div>

        <div className="text-xs text-muted-foreground">
          <p>This feature uses Composio to send emails through your connected Gmail account.</p>
        </div>
      </div>
    </Card>
  );
};